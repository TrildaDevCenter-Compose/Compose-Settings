name: Main

on:
  push:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detekt:
    name: Detekt - Main
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17

      - name: Detekt - Main
        run: ./gradlew detektAll

      - name: Fix path in logs
        uses: richardrigutins/replace-in-files@v2.1.9
        if: ${{ !cancelled() }}
        with:
          files: ${{ github.workspace }}/**/build/reports/detekt/*.xml
          search-text: ${{ github.workspace }}/
          replacement-text: ''

      - name: Publish detekt results
        if: ${{ !cancelled()}}
        uses: gmazzo/publish-report-annotations@v1.11.3
        with:
          reports: ${{ github.workspace }}/**/build/reports/detekt/*.xml
          checkName: Detekt
          workflowSummary: true
          warningsAsErrors: false
          checksSummary: full
          failOnError: true

  build-lib-base:
    name: Build base - Main
    if: ${{ success() }}
    needs: [ detekt ]
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17

      - name: Build
        continue-on-error: ${{ matrix.config.continueOnError }}
        run: ./gradlew :ui-base:build

  build-lib-ui:
    strategy:
      matrix:
        config: [
          { target: tiles, module: ui-tiles, task: build, continueOnError: false },
          { target: tiles expanded, module: ui-tiles-extended, task: build, continueOnError: false },
        ]
    name: Build ${{ matrix.config.target }} - Main
    if: ${{ success() }}
    needs: [ detekt, build-lib-base ]
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17

      - name: Build
        continue-on-error: ${{ matrix.config.continueOnError }}
        run: ./gradlew :${{ matrix.config.module }}:${{ matrix.config.task }}

  build-sample:
    strategy:
      matrix:
        config: [
          { target: android, os: ubuntu-latest, tasks: assembleDebug, continueOnError: false },
          { target: iOS, os: macos-latest, tasks: compileKotlinIosArm64 compileKotlinIosX64 compileKotlinIosSimulatorArm64, continueOnError: false },
          { target: js, os: ubuntu-latest, tasks: jsBrowserDistribution, continueOnError: false },
          { target: desktop, os: ubuntu-latest, tasks: compileKotlinDesktop, continueOnError: false }
        ]
    if: ${{ success() }}
    needs: [ build-lib-ui ]
    runs-on: ${{ matrix.config.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17

      - name: Build sample ${{ matrix.config.target }} - Main
        continue-on-error: ${{ matrix.config.continueOnError }}
        run: ./gradlew :composeApp:${{ matrix.config.tasks }}

  verify-screenshots:
    name: Validate screenshots - PR
    if: ${{ success() }}
    needs: [ build-sample ]
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17

      - name: Validate screenshots - PR
        run: ./gradlew validateScreenshotTest

  check-sign:
    name: Check signature - Main
    if: ${{ success() }}
    needs: [ build-sample ]
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17

      - name: Check signature - Main
        run: ./gradlew signReleasePublication -Psigning.secretKeyRingFile=../secrets.gpg -Psigning.keyId=${{ secrets.GPG_KEY_NAME }} -Psigning.password=${{ secrets.GPG_PASSPHRASE }}

  fake-publish:
    name: Fake publish - Main
    if: ${{ success() }}
    needs: [ build-sample ]
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17

      - name: Publish to MavenLocal
        run: ./gradlew publishToMavenLocal -Psigning.secretKeyRingFile=../secrets.gpg -Psigning.keyId=${{ secrets.GPG_KEY_NAME }} -Psigning.password=${{ secrets.GPG_PASSPHRASE }}

  publish-dry:
    name: Dry run publish - Main
    if: ${{ success() }}
    needs: [ check-sign, build-sample ]
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17

      - name: Publish to MavenCentral (dry)
        run: ./gradlew publishAndReleaseToMavenCentral --no-configuration-cache --max-workers 1 -Psigning.secretKeyRingFile=../secrets.gpg -Psigning.keyId=${{ secrets.GPG_KEY_NAME }} -Psigning.password=${{ secrets.GPG_PASSPHRASE }} -PmavenCentralUsername=${{ secrets.OSSRH_USERNAME }} -PmavenCentralPassword=${{ secrets.OSSRH_PASSWORD }} --dry-run

  # Deployment job
  deploy:
    name: Deploy to Github pages
    if: ${{ success() }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [ build-sample ]
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17

      - name: Build sample JS - Main
        run: ./gradlew wasmJsBrowserDistribution

      - name: Build dokka - Main
        run: ./gradlew dokkaGeneratePublicationHtml

      - name: Copy dokka html to dist
        run: cp -r docs/html composeApp/build/dist/wasmJs/productionExecutable/dokka

      - name: Upload your page as github pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: composeApp/build/dist/wasmJs/productionExecutable/
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
